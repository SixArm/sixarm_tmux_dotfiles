##
# SixArm.com tmux configuration file.
#
# Open source. Edit any way you want.
#
# Notation:
#
#   * C-x means press the control key and x key
#   * M-x means press the alt key and x key
#
# What is a session, a window, a pane?
#
#  * A session is a set of windows; one window is current.
#  * A window is a single screen covered with panes.
#  * A pane is a part of a window that runs a specific command, e.g. a shell.
#
# The command key bindings, and disabled original bindings in brackets.
#
#   C-a         Send the prefix key through to the application. [was C-b]
#   C-o         Rotate the panes in the current window forwards.
#   C-z         Suspend the tmux client.
#   !           Break the current pane out of the window.
#   "           Split the current pane into two, top and bottom.
#   #           List all paste buffers.
#   $           Rename the current session.
#   | [%]       Split the current pane into two, left and right.
#   _           Split the current pane into two, top and bottom.
#   &           Kill the current window.
#   '           Prompt for a window index to select.
#   ,           Rename the current window.
#   n/a [-]     Delete the most recently copied buffer of text.
#   .           Prompt for an index to move the current window.
#   0 to 9      Select windows 0 to 9.
#   ; [:]       Enter the tmux command prompt.
#   n/a [;]     Move to the previously active pane.
#   =           Choose which buffer to paste interactively from a list.
#   +           Change a pane to a window. [custom]
#   -           Change a window to a pane. [custom]
#   ?           List all key bindings.
#   D           Choose a client to detach.
#   [           Enter copy mode to copy text or view the history.
#   ]           Paste the most recently copied buffer of text.
#   c           Create a new window.
#   d           Detach the current client.
#   f           Prompt to search for text in open windows.
#   i           Display some information about the current window.
#   l           Move to the previously selected window.
#   n           Change to the next window.
#   o           Select the next pane in the current window.
#   p           Change to the previous window.
#   q           Briefly display pane indexes.
#   r           Force redraw of the attached client.
#   s           Select a new session for the attached client interactively.
#   L           Switch the attached client back to the last session.
#   t           Show the time.
#   w           Choose the current window interactively.
#   x           Kill the current pane.
#   {           Swap the current pane with the previous pane.
#   }           Swap the current pane with the next pane.
#   ~           Show previous messages from tmux, if any.
#   Page Up     Enter copy mode and scroll one page up.
#   ↑ ↓ ← →     Change to the pane up, down, left, right of the current pane.
#   M-1 to M-5  Arrange panes in one of the five preset layouts: even-
#                 horizontal, even-vertical, main-horizontal, main-
#                 vertical, or tiled.
#   M-n         Move to the next window with a bell or activity marker.
#   M-o         Rotate the panes in the current window backwards.
#   M-p         Move to the previous window with a bell or activity
#                 marker.
#   C-↑ C-↓
#   C-←, C-→
#               Resize the current pane in steps of one cell.
#   M-↑, M-↓
#   M-←, M-→
#               Resize the current pane in steps of five cells.
#
# ## Use SSH to help with automatic window naming
#
# Helpful code to add to ~/.ssh/config:
#
#     Host *
#     PermitLocalCommand yes
#     LocalCommand if [[ $TERM == screen* ]]; then printf "\033k%h\033\\"; fi
#
# When we sign in to a server, The code runs a command to print the server's
# local hostname with an escape sequence that triggers tmux to set the window title.
# If we open the list of windows (ctrl-a w) we see each window's server name.
# This is also the reason why I have automatic window renaming turned off.
# Credit: http://www.unwiredcouch.com/2013/11/15/my-tmux-setup.html
#
#
# ## Version files
#
# We use version specific files to help us run tmux on many systems,
# including systems where we can't easily upgrade tmux ourselves.
#
# For example, in version 2.1 and lower, we want to set UTF8 like this:
#
#     set -g utf8 on
#     set -g status-utf8 on
#     set -g mouse-utf8 on
#
# However, in version 2.2 and higher, UTF8 is autodetected,
# and the explicit tmux settings cause unwanted error messages.
#
#
# ## Credits
#
# Thanks to many people on the net for providing tmux conf files,
# and blogging about how to set tmux and its related tools.
#
#   * https://gist.github.com/andreyvit/2921703
#   * https://github.com/terryma/dotfiles/blob/master/.tmux.conf
#   * http://www.mindfuzz.net/?p=178
#   * http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
#   * http://www.unwiredcouch.com/2013/11/15/my-tmux-setup.html
#   * http://stackoverflow.com/questions/35016458
#   * http://stackoverflow.com/users/5353461/tom-hale
#   * https://github.com/HaleTom
##

##
# First do any environment calculatations,
# so we can use any results in later commands.
# See http://stackoverflow.com/questions/35016458
##

# Calculate the tmux version
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

##
# Some of our teammates pefer to unbind all keys first.
# This guarantees a clean slate. Use this if you want it.
##

# Unbind all keys
#unbind-key -a

##
# Make tmux use C-a for the hot key, instead of C-b.
#
# We prefer C-a because it's faster to type than C-b,
# and it's easy to type when we change the computer
# keyboard "Caps Lock" key to send "Control" instead.
#
# Some people prefer to use C-a because it's the same key
# that the `screen` multiplexer uses, and also easy to type.
#
# Some people prefer to *not* use C-a because its often 
# used by the emacs editor, and also the shell line editor, 
# to mean "go to beginning of line"; we use this often.
# In our opinion, the usefulness of C-a for tmux makes it
# worth doing, and we enable C-a C-a for emacs and line editing.
##

# Set tmux prefix to Control-a
set -g prefix C-a

# Set 'C-a C-a' to type 'C-a'
bind-key C-a send-prefix

# Unset tmux prefix Control-b
unbind C-b

##
# Set the default shell. 
#
# To maximize user flexibility,
# use an environment variable:
#
#     set -g default-shell "$SHELL"
#
# To maximize hardcoded security,
# use a fully qualified path to a binary:
#
#     default-shell "/usr/local/bin/zsh"
#
# To maximize convenience,
# use a simple command:
#
#     set -g default-command "bash"
##

# Set the shell to use the env var.
set -g default-shell "$SHELL"

##
# Shell related settings
##

# Reload the tmux conf file; this is useful when we edit as we go.
bind r source-file ~/.tmux.conf \; display 'Config reloaded'

# Remember many command line history lines.
set -g history-limit 1000000

# Set the terminal type so colors get rendered correctly
set -g default-terminal "screen-256color"

# Make switching to cmd mode in zsh quick.
set -s escape-time 0

# Sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g terminal-overrides '\*:smcup@:rmcup@'

# ;: Command prompt
bind \; command-prompt

##
# Sessions
##

# Fast session switching, by prompting for the session name.
unbind S
bind S command-prompt "switch -t %1"

##
# Windows
##

# Shortcuts M-[0-9] to switch to window [0-9].
# These are a bit faster to use than C-a [0-9].
# We comment these out because we prefer using M-[0-9] in our editor.
#
#bind -n M-0 select-window -t :0
#bind -n M-1 select-window -t :1
#bind -n M-2 select-window -t :2
#bind -n M-3 select-window -t :3
#bind -n M-4 select-window -t :4
#bind -n M-5 select-window -t :5
#bind -n M-6 select-window -t :6
#bind -n M-7 select-window -t :7
#bind -n M-8 select-window -t :8
#bind -n M-9 select-window -t :9

# Split window horizontally or vertically
bind | split-window -h
bind _ split-window -v

##
# Panes
##

# Start pane numbering at 1, because 1 makes more sense for keyboards.
set -g base-index 1

# Select pane similar to vi keybindings
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

##
# Change a pane to a window by using + then back to a pane by using -.
# This can be helpful for native mouse copy-paste, which tends to work
# when the item is in a window, but doesn't work when the item is in a pane.
##

# Zoom a pane to a window.
unbind +
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom

# Unzoom a window to a pane.
unbind -
bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom</span></code></pre></td></tr></table></div></figure>

##
# Language & Encoding
##

# Use UTF8 language encoding.
# If you use a current version of tmux,
# then comment out these lines because
# they are no longer needed.
#
# If you use an older version of tmux,
# then uncomment these lines beacuse
# they provide UTF-8 character encoding.

if-shell "[[ `tmux -V | awk '{print $2}'` == *1. ]]"


# Bind [ and ] to some common used layout
#bind [ select-layout even-horizontal
#bind ] select-layout even-vertical

#--References-------------------------------------------------------------------
# <a href="http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/" title="http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/">http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiple...</a>
# <a href="https://wiki.archlinux.org/index.php/Tmux" title="https://wiki.archlinux.org/index.php/Tmux">https://wiki.archlinux.org/index.php/Tmux</a>

# Source additional files for subgroups
if-shell 'test -f ~/.config/tmux/tmux-mouse.conf' 'source ~/.config/tmux/tmux-mouse.conf'
if-shell 'test -f ~/.config/tmux/tmux-status.conf' 'source ~/.config/tmux/tmux-status.conf'
